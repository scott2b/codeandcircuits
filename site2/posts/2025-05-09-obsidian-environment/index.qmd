---
title: "Fixing Git LFS Integration in Obsidian‚Äôs Git Plugin on macOS"
layout: post
date:   2025-05-09 20:34:00 -0500
categories: macos
---

If you‚Äôre using the Obsidian Git plugin and Git LFS (Large File Storage) on macOS, you may run into a frustrating issue: Git LFS is installed and working from your terminal, but Obsidian Git still fails with errors like git-lfs not found on your path.

Despite setting up everything correctly with git lfs install and .gitattributes, you might still get this: This repository is configured for Git LFS but 'git-lfs' was not found on your path.

This post explains why this happens ‚Äî and how to fix it.

‚∏ª

üß† The Problem: macOS GUI Apps Use a Different PATH

When you launch Obsidian from Spotlight, the Dock, or Finder, it does not inherit your terminal‚Äôs environment. That means:

  - Your shell config files ‚Äî like ~/.zprofile, ~/.bash_profile, ~/.bashrc, or ~/.config/fish/config.fish ‚Äî are ignored.
  - /usr/local/bin ‚Äî where git-lfs lives ‚Äî may not be in the PATH.
  - The Git plugin inside Obsidian cannot find git-lfs, even though you can from the command line.

This breaks Git LFS, and by extension, breaks Git pushes involving large files ‚Äî even though everything looks configured correctly.

‚∏ª

‚úÖ The Solution: A Custom Obsidian Launcher That Forces the Correct PATH

Instead of hacking around with shell configs or launchctl, the most reliable solution is to create a wrapper app ‚Äî a custom .app bundle that:

	1.	Launches Obsidian manually, bypassing macOS sandbox restrictions.
	2.	Injects a clean and correct PATH that includes /usr/local/bin.


üöÄ How to Build the Obsidian Launcher That Works with Git LFS

To solve the git-lfs not found issue, create a small .app bundle that launches Obsidian with the correct environment.

üîß Step-by-step Instructions

	1.	Open Automator (via Spotlight or Applications folder)
	2.	Choose ‚ÄúApplication‚Äù as the new document type
	3.	Add a ‚ÄúRun Shell Script‚Äù action
	4.	Set the shell to /bin/bash
	5.	Paste the following script:

```
export PATH="$HOME/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
open -a "Obsidian"
```


	6.	Save the app as something like Obsidian With Git LFS.app
	7.	Move it to /Applications or pin it to your Dock

Now, launch Obsidian using this custom app, and the Git plugin will be able to find git-lfs even if your normal PATH isn‚Äôt inherited.

‚∏ª

üß† Why This Works

macOS GUI apps do not inherit the environment of your login shell ‚Äî not Bash, Zsh, Fish, or anything else. This means tools installed in /usr/local/bin or via Homebrew may be invisible to apps like Obsidian when launched normally.

By wrapping Obsidian in a small script that explicitly sets the PATH it sees git-lfs and any other CLI tools you rely on.


‚∏ª

üß∞ Optional: Add Other Tools to PATH

If you install other CLI tools in custom locations (like gh, brew, or python), you can update the PATH line in the launcher script as needed.

‚∏ª

üéØ Why This Matters

Git LFS is critical when you‚Äôre working with binary files (PDFs, images, media, etc.) that exceed GitHub‚Äôs 100MB limit. If Obsidian Git can‚Äôt invoke git-lfs, large commits will silently fail or confuse your workflow.

This approach:
	‚Ä¢	Works reliably on all versions of macOS
	‚Ä¢	Doesn‚Äôt require sudo access or risky symlinks to /usr/bin
	‚Ä¢	Avoids the frustration of debugging shell PATH inheritance in GUI apps


