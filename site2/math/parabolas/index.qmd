---
title: "Parabolas"
format:
  html:
    code-fold: true
    code-tools: true
    html-math-method: mathjax
    embed-resources: true
    document-tools:
      - text: "Slides"
        href: "parabolas-revealjs.html"
      - text: "PDF"
        href: "parabolas.pdf"
  pdf:
    papersize: letter
    geometry:
      - margin=1in
    fig-format: pdf
    jupyter: python3
  revealjs:
    output-file: parabolas-revealjs.html
    theme: simple
    slide-number: true
    width: 1600
    height: 900
    code-fold: true
jupyter: python3
---

## Standard form of a parabola

$f(x) = ax^2 + bx + c$

- $a$: Determines the **direction** and **width** of the parabola:
    - $\mathbf{a > 0}$: Opens upward.  $\mathbf{a < 0}$: Opens downward.
    - $\mathbf{|a| > 1}$: Narrower. $\mathbf{|a| < 1}$: Wider

- $b$: Influences the horizontal position of the vertex, given by $x = -\frac{b}{2a}$
- $c$: Is the **y-intercept**, thus determining vertical shift.

::: {.content-visible when-format="html"}
```{ojs}
viewof a = Inputs.range([-2, 2], {
  value: 1,
  step: 0.1,
  label: "a (width & direction)"
})

viewof b = Inputs.range([-5, 5], {
  value: 0,
  step: 0.5,
  label: "b (horizontal shift)"
})

viewof c = Inputs.range([-5, 5], {
  value: 0,
  step: 0.5,
  label: "c (vertical shift)"
})

Plot.plot({
  grid: true,
  x: {domain: [-10, 10], label: "x"},
  y: {domain: [-10, 10], label: "y"},
  clip: true,
  marks: [
    Plot.ruleY([0], {stroke: "black", strokeWidth: 2}),
    Plot.ruleX([0], {stroke: "black", strokeWidth: 2}),
    Plot.line(d3.range(-5, 5, 0.1), {
      x: d => d,
      y: d => a * d ** 2 + b * d + c,
      stroke: "blue"
    })
  ]
})
```
:::

## Vertex form

$f(x) = a(x - h)^2 + k$

- $h$ controls **horizontal shift**
  - $h > 0$: shift right
  - $h < 0$: shift left
- $k$ is the **vertical position** of the vertex
  - $k > 0$: shift up
  - $k < 0$: shift down

::: {.content-visible when-format="html"}
```{ojs}
viewof a2 = Inputs.range([-2, 2], {
  value: 1,
  step: 0.1,
  label: "a (width & direction)"
})

viewof h = Inputs.range([-5, 5], {
  value: 0,
  step: 0.5,
  label: "h (horizontal shift)"
})

viewof k = Inputs.range([-5, 5], {
  value: 0,
  step: 0.5,
  label: "k (vertical shift)"
})

Plot.plot({
  grid: true,
  x: {domain: [-10, 10], label: "x"},
  y: {domain: [-10, 10], label: "y"},
  clip: true,
  marks: [
    Plot.ruleY([0], {stroke: "black", strokeWidth: 2}),
    Plot.ruleX([0], {stroke: "black", strokeWidth: 2}),
    Plot.line(d3.range(-5, 5, 0.1), {
      x: d => d,
      y: d => a2 * (d - h) ** 2 + k,
      stroke: "red"
    })
  ]
})
```
:::

## Example Parabolas

```{python}
#| echo: false
#| fig-cap: 
#|   - "Standard Form Examples"
#|   - "Vertex Form Examples"
#| layout-ncol: 2

import numpy as np
import matplotlib.pyplot as plt

def plot_standard_form():
    x = np.linspace(-5, 5, 200)
    plt.figure(figsize=(8, 6))
    plt.plot(x, x**2, 'b-', label='y = x²')
    plt.plot(x, 2*x**2, 'r-', label='y = 2x²')
    plt.plot(x, -0.5*x**2, 'g-', label='y = -0.5x²')
    plt.grid(True)
    plt.legend()
    plt.xlabel('x')
    plt.ylabel('y')
    plt.title('Standard Form Examples')
    return plt

def plot_vertex_form():
    x = np.linspace(-5, 5, 200)
    plt.figure(figsize=(8, 6))
    plt.plot(x, (x)**2, 'b-', label='y = x²')
    plt.plot(x, (x-2)**2, 'r-', label='y = (x-2)²')
    plt.plot(x, (x+2)**2 - 1, 'g-', label='y = (x+2)² - 1')
    plt.grid(True)
    plt.legend()
    plt.xlabel('x')
    plt.ylabel('y')
    plt.title('Vertex Form Examples')
    return plt

plot_standard_form()
plt.show()
plot_vertex_form()
plt.show()
```